
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa3\xa5\xd8p\xdd\x12\xa5\xe5L\xba\xec\x9a\x92\x84O\xb1'
    
_lr_action_items = {'DO':([12,13,14,16,17,18,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,26,-14,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,]),'THEN':([12,13,14,16,18,22,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,-14,38,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,]),'NUMBER':([1,8,15,20,23,25,27,28,29,30,31,32,33,34,55,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'WHILE':([0,21,26,38,59,62,],[1,1,1,1,1,1,]),'GT':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,27,-14,27,27,27,27,-15,-13,27,27,27,27,27,-8,27,-9,-25,]),'FI':([2,3,7,10,11,12,13,14,16,18,36,37,41,42,44,45,46,47,48,49,50,51,54,56,63,66,67,],[-7,-4,-3,-6,-5,-16,-17,-18,-12,-14,-19,-2,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,-20,66,-21,-22,]),'MINUS':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,34,-14,34,34,34,34,-15,-13,34,34,34,34,34,-8,34,-9,-25,]),'LE':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,31,-14,31,31,31,31,-15,-13,31,31,31,31,31,-8,31,-9,-25,]),'RPAREN':([12,13,14,16,18,24,39,40,41,42,44,45,46,47,48,49,50,51,54,57,58,60,64,],[-16,-17,-18,-12,-14,41,54,-11,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,-24,62,-10,-23,]),'SEMICOLON':([2,3,7,10,11,12,13,14,16,18,36,41,42,44,45,46,47,48,49,50,51,54,56,66,67,],[-7,-4,21,-6,-5,-16,-17,-18,-12,-14,-19,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,-20,-21,-22,]),'NE':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,30,-14,30,30,30,30,-15,-13,30,30,30,30,30,-8,30,-9,-25,]),'LT':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,29,-14,29,29,29,29,-15,-13,29,29,29,29,29,-8,29,-9,-25,]),'PLUS':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,32,-14,32,32,32,32,-15,-13,32,32,32,32,32,-8,32,-9,-25,]),'COMMA':([12,13,14,16,18,40,41,42,44,45,46,47,48,49,50,51,54,57,],[-16,-17,-18,-12,-14,55,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,61,]),'DEFINE':([0,21,26,38,59,62,],[5,5,5,5,5,5,]),'IDENT':([0,1,5,8,15,20,21,23,25,26,27,28,29,30,31,32,33,34,38,52,55,59,61,62,],[6,13,19,13,13,13,6,13,13,6,13,13,13,13,13,13,13,13,6,57,13,6,57,6,]),'END':([2,3,7,10,11,12,13,14,16,18,36,37,41,42,44,45,46,47,48,49,50,51,54,56,65,66,67,],[-7,-4,-3,-6,-5,-16,-17,-18,-12,-14,-19,-2,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,-20,67,-21,-22,]),'ELSE':([2,3,7,10,11,12,13,14,16,18,36,37,41,42,44,45,46,47,48,49,50,51,53,54,56,66,67,],[-7,-4,-3,-6,-5,-16,-17,-18,-12,-14,-19,-2,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,59,-25,-20,-21,-22,]),'GE':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,28,-14,28,28,28,28,-15,-13,28,28,28,28,28,-8,28,-9,-25,]),'LPAREN':([1,8,13,15,20,23,25,27,28,29,30,31,32,33,34,35,55,],[15,15,23,15,15,15,15,15,15,15,15,15,15,15,15,52,15,]),'TIMES':([12,13,14,16,18,41,42,49,51,54,],[-16,-17,-18,25,-14,-15,-13,25,25,-25,]),'EQ':([12,13,14,16,17,18,22,24,36,40,41,42,44,45,46,47,48,49,50,51,54,],[-16,-17,-18,-12,33,-14,33,33,33,33,-15,-13,33,33,33,33,33,-8,33,-9,-25,]),'IF':([0,21,26,38,59,62,],[8,8,8,8,8,8,]),'ASSIGNOP':([6,],[20,]),'OD':([2,3,7,10,11,12,13,14,16,18,36,37,41,42,43,44,45,46,47,48,49,50,51,54,56,66,67,],[-7,-4,-3,-6,-5,-16,-17,-18,-12,-14,-19,-2,-15,-13,56,-27,-28,-26,-31,-29,-8,-30,-9,-25,-20,-21,-22,]),'$end':([2,3,4,7,9,10,11,12,13,14,16,18,36,37,41,42,44,45,46,47,48,49,50,51,54,56,66,67,],[-7,-4,0,-3,-1,-6,-5,-16,-17,-18,-12,-14,-19,-2,-15,-13,-27,-28,-26,-31,-29,-8,-30,-9,-25,-20,-21,-22,]),'PROC':([19,],[35,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_list':([0,21,26,38,59,62,],[9,37,43,53,63,65,]),'func_call':([1,8,15,20,23,25,27,28,29,30,31,32,33,34,55,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'term':([1,8,15,20,23,27,28,29,30,31,32,33,34,55,],[16,16,16,16,16,16,16,16,16,16,49,16,51,16,]),'if_stmt':([0,21,26,38,59,62,],[10,10,10,10,10,10,]),'param_list':([52,61,],[58,64,]),'expr':([1,8,15,20,23,27,28,29,30,31,33,55,],[17,22,24,36,40,44,45,46,47,48,50,40,]),'define_stmt':([0,21,26,38,59,62,],[2,2,2,2,2,2,]),'stmt':([0,21,26,38,59,62,],[7,7,7,7,7,7,]),'assign_stmt':([0,21,26,38,59,62,],[3,3,3,3,3,3,]),'while_stmt':([0,21,26,38,59,62,],[11,11,11,11,11,11,]),'program':([0,],[4,]),'expr_list':([23,55,],[39,60,]),'fact':([1,8,15,20,23,25,27,28,29,30,31,32,33,34,55,],[18,18,18,18,18,42,18,18,18,18,18,18,18,18,18,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','interpreterext.py',134),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','interpreterext.py',142),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','interpreterext.py',143),
  ('stmt -> assign_stmt','stmt',1,'p_stmt','interpreterext.py',152),
  ('stmt -> while_stmt','stmt',1,'p_stmt','interpreterext.py',153),
  ('stmt -> if_stmt','stmt',1,'p_stmt','interpreterext.py',154),
  ('stmt -> define_stmt','stmt',1,'p_stmt','interpreterext.py',155),
  ('expr -> expr PLUS term','expr',3,'p_add','interpreterext.py',159),
  ('expr -> expr MINUS term','expr',3,'p_sub','interpreterext.py',163),
  ('expr_list -> expr COMMA expr_list','expr_list',3,'p_expr_list','interpreterext.py',167),
  ('expr_list -> expr','expr_list',1,'p_expr_list','interpreterext.py',168),
  ('expr -> term','expr',1,'p_expr_term','interpreterext.py',176),
  ('term -> term TIMES fact','term',3,'p_mult','interpreterext.py',180),
  ('term -> fact','term',1,'p_term_fact','interpreterext.py',184),
  ('fact -> LPAREN expr RPAREN','fact',3,'p_fact_expr','interpreterext.py',188),
  ('fact -> NUMBER','fact',1,'p_fact_NUM','interpreterext.py',192),
  ('fact -> IDENT','fact',1,'p_fact_IDENT','interpreterext.py',196),
  ('fact -> func_call','fact',1,'p_fact_funcall','interpreterext.py',200),
  ('assign_stmt -> IDENT ASSIGNOP expr','assign_stmt',3,'p_assn','interpreterext.py',204),
  ('while_stmt -> WHILE expr DO stmt_list OD','while_stmt',5,'p_while','interpreterext.py',208),
  ('if_stmt -> IF expr THEN stmt_list ELSE stmt_list FI','if_stmt',7,'p_if','interpreterext.py',212),
  ('define_stmt -> DEFINE IDENT PROC LPAREN param_list RPAREN stmt_list END','define_stmt',8,'p_def','interpreterext.py',216),
  ('param_list -> IDENT COMMA param_list','param_list',3,'p_param_list','interpreterext.py',220),
  ('param_list -> IDENT','param_list',1,'p_param_list','interpreterext.py',221),
  ('func_call -> IDENT LPAREN expr_list RPAREN','func_call',4,'p_func_call','interpreterext.py',229),
  ('expr -> expr LT expr','expr',3,'p_less','interpreterext.py',235),
  ('expr -> expr GT expr','expr',3,'p_greater','interpreterext.py',239),
  ('expr -> expr GE expr','expr',3,'p_gequal','interpreterext.py',243),
  ('expr -> expr LE expr','expr',3,'p_lequal','interpreterext.py',247),
  ('expr -> expr EQ expr','expr',3,'p_equal','interpreterext.py',251),
  ('expr -> expr NE expr','expr',3,'p_nequal','interpreterext.py',255),
]
